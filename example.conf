# Email notification
notify.from your.ci.script@recidiv.example.org
notify.to {
    developer1@example.org
    developer2@example.org
}

# If this is set to 1 an email is sent for every failed test.
# Otherwise if it is set to 0 an email is sent the first time a given test
# fails, and another email when the test is back working.
notify.every.failure 0
smtp.server 127.0.0.1

# History length. How many old runs to remember per every test instance?
history.len 1024

# The data file is where all the data about old tests is saved.
datafile /tmp/recidiv.dat

# Webroot is where we generate the HTML files for the web site.
# The site is completely static and is generated again from scratch every
# time you restart the CI script.
#
# The web site is also generated every time a new test is completed.
webroot /tmp/

# Show latest N runs for every test in the site home.
web.index.show.latest 15

# Show latest N runs in err state.
web.index.show.latest.err 5

# The whitelist is a list of errors that are actually false negative like
# network errors and alike, as glob-style patterns.
whitelist {
    "*unable to connect a socket*"
}

# Setup what to test.
#
# Note that every test should start with a "cd" statement, it is not
# mandatory but usually you want to be sure to enter the directory
# where the thing to test is.

test always-ok-one {
    "cd ."
    "echo hello"
}

# This second test has options to make it run at max one time every 30 seconds.
test always-ok-two {
    "cd ."
    "echo FooBar"
} {
    run.minimal.period 30
}

test sometime-does-not-work {
    "cd ."
    "./testprg"
}

# This is another more realistic test:
#
# test redis-2.2 {
#     "cd /tmp/redis"
#     "git checkout 2.2"
#     "git pull origin 2.2"
#     "make clean"
#     "make"
#     "tclsh8.5 tests/test_helper.tcl --verbose"
# }

# Test execution settings
# Number of seconds to wait after the execution of every test before
# executing the next one.
wait.after.every.test 3

# Html template
template {
<!doctype html>
<html><head><title>Recidiv CI</title>
<style>
body {
    font-family: Helvetica;
}
a {
    color: #0063dc;
    text-decoration: none;
}
h2 {
    color: #666;
}
h3 {
    color: #666;
}
.status_ok {
    color: darkgreen;
    font-weight: bold;
}
.status_err {
    color: red;
    font-weight: bold;
}
.errorcmd {
    color:white;
    background-color: #f55000;
    padding:10px;
    font-size:16px;
    font-family:monospace;
}
#footer {
    color: #999;
    font-size: 12px;
}
</style>
<body>
<h1>Recidiv<span style="color:red">CI</span></h1>
%content%
<div id="footer">This Continuous Integration is powered by <a href="http://github.com/antirez/recidiv">Recidiv</a>.</div>
</body>
</html>
}
